#!/usr/bin/bash

# if this usb device is connected to the host the vm will be terminated (the host must not have crashed and the usb port must not be passed through to the guest)
killswitchVendorID="XXXX"
killswitchProductId="XXXX"

# virsh applies localization to returned values, this array should contain equivalents to 'running' in different languages
# en-us, pt-br
shutoff=("shutoff" "desligado")
running=("running" "executando")

# stops if not running as root
if [ ! $(whoami) == "root" ]; then echo "Not root"; exit 1; fi

# stops if the vm name was not specified
if [ "$1" == "" ]; then echo "VM name not specified"; exit 1; fi

# prevents starting a running or inexistent vm
if [ ! $(echo ${shutoff[@]} | grep -o $(virsh list --state-shutoff | grep " $1 " | awk '{ print $3}') | wc -w) == 1 ]; then echo "VM is not available"; exit 1; fi

echo "Logging out in 5 seconds... You can ctrl+d if you want"
sleep 5

# stops the display manager
systemctl stop display-manager
sleep 5

# changes to another tty
chvt 5; sleep 1
pkill -KILL -u "$2"; sleep 1

# changes the cpu frequency governor to performance
systemctl start perfgovernor

# starts the specified vm
virsh start "$1"

# waits some time before checking if its still running
sleep 5

# checks if the vm is still running every 5 seconds
while [ $(echo ${running[@]} | grep -o $(virsh list --state-running | grep " $1 " | awk '{ print $3}') | wc -w) == 1 ]; do 
    sleep 5
    
    if [[ $(awk '$2 == "Vendor='$killswitchVendorID'" && $3 == "ProdID='$killswitchProductId'" { print $0 }' /sys/kernel/debug/usb/devices) != "" ]]; then 
        virsh destroy "$1"
        sleep 5
        break
    fi
done

# changes the cpu frequency governor back to powersave
systemctl stop perfgovernor

# waits 5 seconds for the gpu to be returned to the host
sleep 5

# starts the display manager again
systemctl start display-manager
